<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="css/normalize.css">
  <link rel="stylesheet" href="css/skeleton.css">
  <link rel="stylesheet" href="css/styles.css">

  <title>CM0645 Internet of Things</title>
</head>

<body>
  <div class="container">
    <h1>CM0645 Internet of Things</h1>

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>LED Red</h3>
      </div>
      <!-- 3 columns to display toggle button -->
      <div class="three columns">
        <label class="switch">
          <input id= "red-toggle-switch" type="checkbox">
          <div class="slider round"></div>
        </label>
      </div>
    </div>
    <!-- End of row -->

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>LED Green</h3>
      </div>
      <!-- 3 columns to display toggle button -->
      <div class="three columns">
        <label class="switch">
          <input id= "green-toggle-switch" type="checkbox">
          <div class="slider round"></div>
        </label>
      </div>
    </div>
    <!-- End of row -->

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>LED Blue</h3>
      </div>
      <!-- 3 columns to display toggle button -->
      <div class="three columns">
        <label class="switch">
          <input id= "blue-toggle-switch" type="checkbox">
          <div class="slider round"></div>
        </label>
      </div>
    </div>
    <!-- End of row -->

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>Light sensor</h3>
      </div>
      <!-- 3 columns to display value -->
      <div class="three columns">
        <h3 id="light-sensor">-</h3>
      </div>
    </div>
    <!-- End of row -->

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>Humidity sensor</h3>
      </div>
      <!-- 3 columns to display value -->
      <div class="three columns">
        <h3 id="humidity-sensor">-</h3>
      </div>
    </div>
    <!-- End of row -->

    <!-- Start of row -->
    <div class="row">
      <!-- 9 columns to display resource name -->
      <div class="nine columns">
        <h3>Temperature sensor</h3>
      </div>
      <!-- 3 columns to display value -->
      <div class="three columns">
        <h3 id="temperature-sensor">-</h3>
      </div>
    </div>
    <!-- End of row -->

    <h3>Accelerometer</h3>
    <canvas id="accelerometercanvas" width= "1000" height="300"></canvas>

    <h3>Magnetometer</h3>
    <canvas id="magnetometercanvas" width="1000" height="300"></canvas>
  </div>

  <script type="text/javascript" src="js/jquery-2.1.4.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js"></script>
  <script type="text/javascript" src="js/smoothie.js"></script>
  <script type="text/javascript">
    $(function() {
      var socket = io();

      // Handling toggle button events
      document.getElementById('red-toggle-switch').onclick = function() {
        var value = 1;
        if (this.checked) {
          value = 0;
        }
        socket.emit('toggle-switch', {
          id: '/led/0/red',
          value: value
        });
      };

      document.getElementById('green-toggle-switch').onclick = function() {
        var value = 1;
        if (this.checked) {
          value = 0;
        }
        socket.emit('toggle-switch', {
          id: '/led/0/green',
          value: value
        });
      };

      document.getElementById('blue-toggle-switch').onclick = function() {
        var value = 1;
        if (this.checked) {
          value = 0;
        }
        socket.emit('toggle-switch', {
          id: '/led/0/blue',
          value: value
        });
      };

      // Initialising acclerometer graph diagram
      var accelerometersmoothie = new SmoothieChart();
      accelerometersmoothie.streamTo(document.getElementById("accelerometercanvas"));

      // Data
      var accXLine = new TimeSeries();
      var accYLine = new TimeSeries();
      var accZLine = new TimeSeries();

      // Add to SmoothieChart
      accelerometersmoothie.addTimeSeries(accXLine, { strokeStyle:'rgb(255, 0, 0)', fillStyle:'rgba(255, 0, 0, 0.0)', lineWidth:3 });
      accelerometersmoothie.addTimeSeries(accYLine, { strokeStyle:'rgb(0, 255, 0)', fillStyle:'rgba(0, 255, 0, 0.0)', lineWidth:3 });
      accelerometersmoothie.addTimeSeries(accZLine, { strokeStyle:'rgb(0, 0, 255)', fillStyle:'rgba(0, 0, 255, 0.0)', lineWidth:3 });

      // Initialising magnetometer graph diagram
      var magnetometersmoothie = new SmoothieChart();
      magnetometersmoothie.streamTo(document.getElementById("magnetometercanvas"));

      // Data
      var magXLine = new TimeSeries();
      var magYLine = new TimeSeries();
      var magZLine = new TimeSeries();

      // Add to SmoothieChart
      magnetometersmoothie.addTimeSeries(magXLine, { strokeStyle:'rgb(255, 0, 0)', fillStyle:'rgba(255, 0, 0, 0.0)', lineWidth:3 });
      magnetometersmoothie.addTimeSeries(magYLine, { strokeStyle:'rgb(0, 255, 0)', fillStyle:'rgba(0, 255, 0, 0.0)', lineWidth:3 });
      magnetometersmoothie.addTimeSeries(magZLine, { strokeStyle:'rgb(0, 0, 255)', fillStyle:'rgba(0, 0, 255, 0.0)', lineWidth:3 });

      // Listen to server response
      socket.on('notifications', function (data) {
        console.log('Receieved data: ', data);
        if (data.id == "/acc/0/x") { // Accelerometer
          accXLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/acc/0/y") {
          accYLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/acc/0/z") {
          accZLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/mag/0/x") { // Magnetometer
          magXLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/mag/0/y") {
          magYLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/mag/0/z") {
          magZLine.append(new Date().getTime(), data.value);
        } else if (data.id == "/weather/0/light") { // Weather shield
          // Convert from 32 bit integer to percentage
          var value = (data.value/65536) * 100;
          $("#light-sensor").html(value.toFixed(2) + "%");
        } else if (data.id == '/weather/0/temperature') {
          $("#temperature-sensor").html(data.value + "Â°C");
        } else if (data.id == '/weather/0/humidity') {
          $("#humidity-sensor").html(data.value + "%");
        }
      });
    });
  </script>
</body>
</html>
